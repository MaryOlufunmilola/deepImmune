{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"epit",
				"epitopefile"
			],
			[
				"samples",
				"samples1"
			],
			[
				"yl",
				"ylim\t(run.R)"
			],
			[
				"cd",
				"cdr3b"
			],
			[
				"end",
				"end_inx"
			],
			[
				"negati",
				"negative_pairs"
			],
			[
				"str",
				"strsplit"
			],
			[
				"create",
				"create_simulation_dataset"
			],
			[
				"pretrain",
				"pre_training_epochs"
			],
			[
				"drop",
				"dropout1"
			],
			[
				"learning",
				"learning_rate"
			],
			[
				"num_",
				"num_patient"
			],
			[
				"nontcga",
				"nontcga_acc"
			],
			[
				"layer",
				"layer_nums"
			],
			[
				"positive",
				"positive_pairs"
			],
			[
				"use",
				"use_exponential"
			],
			[
				"seq",
				"seq_inx"
			],
			[
				"cdr",
				"cdr3s_list"
			],
			[
				"iedb",
				"iedb_training"
			],
			[
				"cdr3s",
				"cdr3s_list"
			],
			[
				"nont",
				"nontcga_training_set"
			],
			[
				"cdr3",
				"cdr3aa"
			],
			[
				"negative_pa",
				"negative_patients\t(semisupervised_tcrnet.py)"
			],
			[
				"lo",
				"logits"
			],
			[
				"if",
				"if\tIf Condition"
			],
			[
				"cor_loss",
				"cor_loss_elem"
			],
			[
				"model",
				"model_name"
			],
			[
				"vdj",
				"vdjb_dataset"
			],
			[
				"Multil",
				"Multilayer"
			],
			[
				"full",
				"full_connected_layers"
			],
			[
				"Mult",
				"MultilayerPerceptron"
			],
			[
				"model_",
				"model_name"
			],
			[
				"common",
				"common_patients"
			],
			[
				"Epitope_",
				"Epitope_SYMBOL_LEN"
			],
			[
				"Epitope",
				"Epitope_onehot_"
			],
			[
				"CDR3b_",
				"CDR3b_SYMBOL_LEN"
			],
			[
				"newFe",
				"newFeatLen"
			],
			[
				"n_i",
				"n_input"
			],
			[
				"test",
				"testinx"
			],
			[
				"remo",
				"remove_chars"
			],
			[
				"F",
				"False\t(simple_neural_network.py)"
			],
			[
				"Y_",
				"Y_test"
			],
			[
				"ones",
				"ones"
			],
			[
				"label",
				"labels_"
			],
			[
				"maxpool",
				"maxpool2"
			],
			[
				"inputs",
				"inputs_\t(autoencoder.py)"
			],
			[
				"p.adj",
				"p.adjust\t(drug.interaction.processing.V2.R)"
			],
			[
				"bb.ac",
				"bb.ac.summary"
			],
			[
				"try",
				"tryCatch"
			],
			[
				"cellid",
				"cellids"
			],
			[
				"method",
				"method=\"spearman"
			],
			[
				"syner",
				"synergy1"
			],
			[
				"ife",
				"ifelse\t{base}"
			],
			[
				"coef",
				"coefficients\t(run.local.R)"
			],
			[
				"fac",
				"factor\t(run.R)"
			],
			[
				"ggp",
				"ggplot\t(run.R)"
			],
			[
				"ggpo",
				"ggplot2\t(run.R)"
			],
			[
				"cellP",
				"cellproliferation.median"
			],
			[
				"bb.com",
				"bb.compound"
			],
			[
				"Dose",
				"Dose==\"D3\t(run.local.R)"
			],
			[
				"anchor.",
				"anchor.proliferation"
			],
			[
				"Dos",
				"Doses"
			],
			[
				"pas",
				"paste"
			],
			[
				"bb.comp",
				"bb.compound.median"
			],
			[
				"bb.combo",
				"bb.combo.median"
			],
			[
				"surv.",
				"surv.strata"
			],
			[
				"anchor",
				"anchor.count"
			],
			[
				"cell",
				"cellid"
			],
			[
				"Cel",
				"CellID"
			],
			[
				"compound",
				"compound.curr"
			],
			[
				"plate",
				"platedensity"
			],
			[
				"ctla4.res",
				"ctla4.rescuer.dd"
			],
			[
				"col",
				"colnames"
			],
			[
				"rescuer",
				"rescuers"
			],
			[
				"CD2",
				"CD274\t(nature23270.R)"
			],
			[
				"group2.d",
				"group2.du.sel"
			],
			[
				"pot",
				"potential.du.rescuers\t(run.R)"
			],
			[
				"set",
				"setdiff\t(pd1.R)"
			],
			[
				"readxl",
				"readxl"
			],
			[
				"pd1.res",
				"pd1.rescuer.RData"
			],
			[
				"pd1.re",
				"pd1.reload.RData\t(pd1.R)"
			],
			[
				"list",
				"list = \tArguments"
			],
			[
				"tumor",
				"tumor.purity\t(TODO.R)"
			],
			[
				"la",
				"lapply"
			],
			[
				"na.la",
				"na.last = \tArguments"
			],
			[
				"sr.ini",
				"sr.invitro"
			],
			[
				"sr.gene.",
				"sr.gene.500.RData\t(incisor.R)"
			],
			[
				"sof.",
				"sof.aggreage.fdr"
			],
			[
				"shRNA.s",
				"shRNA.significance.fdr"
			],
			[
				"iorio.sco",
				"iorio.cohen.score"
			],
			[
				"phyl",
				"phylogenetic.screen\t(INCISOR.DU.top1000.R)"
			],
			[
				"pval.m",
				"pval.mRNA"
			],
			[
				"na.r",
				"na.rm=T\t(source.incisor.R)"
			],
			[
				"sr.",
				"sr.finite1"
			],
			[
				"gee",
				"gene2"
			],
			[
				"rebu",
				"rebuild = \tArguments"
			],
			[
				"featu",
				"feature.sel.temp"
			],
			[
				"T",
				"TRUE"
			],
			[
				"full.",
				"full.names = \tArguments"
			],
			[
				"pate",
				"pattern = \tArguments"
			],
			[
				"lis.t",
				"list.files\t{base}"
			],
			[
				"den",
				"dendrogram\t(sw480.R)"
			],
			[
				"va",
				"values\t(dnmt1.R)"
			],
			[
				"scale_col",
				"scale_colour_discrete\t{ggplot2}"
			],
			[
				"wt.cid",
				"wt.cid1"
			],
			[
				"mb.",
				"mb.is.present"
			],
			[
				"replace",
				"replacement = \tArguments"
			],
			[
				"write.",
				"write.csv\t{utils}"
			],
			[
				"pattern",
				"pattern = \tArguments"
			],
			[
				"paste",
				"paste0\t{base}"
			],
			[
				"ior",
				"iorio.sig"
			],
			[
				"expres",
				"expression"
			],
			[
				"cell.dt.t",
				"cell.dt.temp"
			],
			[
				"Cell",
				"CellID"
			],
			[
				"cluster",
				"clusterProfiler"
			],
			[
				"GO",
				"GOcategories"
			],
			[
				"Go",
				"GOcategories"
			],
			[
				"gene",
				"geneUniverse"
			],
			[
				"lev",
				"levels=c\t(mtor.rsr.cox.dd.R)"
			],
			[
				"lab",
				"label"
			],
			[
				"combin",
				"combined.summary"
			],
			[
				"curtis.m",
				"curtis.mRNA.approved.drug.summary"
			],
			[
				"orange",
				"orangered3\t(run.cox.du.pancancer.drugResponse.parallel.final.R)"
			],
			[
				"Col",
				"Colv = \tArguments"
			],
			[
				"Row",
				"Rowv = \tArguments"
			],
			[
				"lave",
				"lavender"
			],
			[
				"decre",
				"decreasing = \tArguments"
			],
			[
				"mela",
				"melanoma.drugTargetMap"
			]
		]
	},
	"buffers":
	[
		{
			"file": "search_hyperparams.py",
			"settings":
			{
				"buffer_size": 2119,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					""
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (All)"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (This File Only)"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R/R.sublime-build",
					""
				],
				[
					"Packages/R-Box/support/R Package.sublime-build",
					""
				],
				[
					"Packages/R-Box/support/R Package.sublime-build",
					"Clean and Build"
				],
				[
					"Packages/R-Box/support/R Package.sublime-build",
					"Test"
				],
				[
					"Packages/R-Box/support/R Package.sublime-build",
					"Check"
				],
				[
					"Packages/R-Box/support/R Package.sublime-build",
					"Document"
				],
				[
					"Packages/R-Box/support/R Package.sublime-build",
					"Compile C++ Attributes"
				],
				[
					"Packages/R-Box/support/R Package.sublime-build",
					"Build Source"
				],
				[
					"Packages/R-Box/support/R Package.sublime-build",
					"Build Binary"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					""
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (All)"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (This File Only)"
				],
				[
					"Packages/SendCode/support/R - Source File.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/R/R.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R/R.sublime-build",
					""
				],
				[
					"Packages/SendTextPlus/R - Source File.sublime-build",
					""
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					""
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (All)"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (This File Only)"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/R/R.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					""
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (All)"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (This File Only)"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				"PdfLaTeX"
			]
		],
		[
			[
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					""
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (All)"
				],
				[
					"Packages/Vintageous/Vintageous.sublime-build",
					"Vintageous - Test (This File Only)"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 71.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ipyth",
				"Open IPython Notebook"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"box",
				"Boxy Theme: Activation"
			],
			[
				"boxy",
				"Boxy Theme: Activation"
			],
			[
				"task",
				"Tasks: New document"
			],
			[
				"sendcode",
				"Preferences: SendCode Settings"
			],
			[
				"send",
				"SendCode: Choose Program"
			],
			[
				"tasks: New",
				"Tasks: New document"
			],
			[
				"tasks",
				"Tasks: View as HTML"
			],
			[
				"Tasks",
				"Tasks: New document"
			],
			[
				"new ",
				"Tasks: New"
			],
			[
				"task:New",
				"Tasks: New document"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pref",
				"Preferences: Settings"
			],
			[
				"user pref",
				"Preferences: Terminal Settings – User"
			],
			[
				"diff",
				"FileDiffs: Menu"
			],
			[
				"sendco",
				"SendCode: Choose Program"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"autof",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"Autoform",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"autoform",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"git",
				"Git: Push"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"solar",
				"SolarizedToggle: Toggle"
			],
			[
				"sol",
				"SolarizedToggle: Toggle"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"term",
				"Terminal: Open"
			],
			[
				"",
				"Boxy Theme: Activation"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"pa k",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"remove pack",
				"Package Control: Remove Package"
			],
			[
				"sendTex",
				"SendTextPlus: Choose Program"
			],
			[
				"fold",
				"Code Folding: Unfold All"
			],
			[
				"sola",
				"SolarizedToggle: Toggle"
			],
			[
				"replace",
				"Snippet: Conditionally replace/insert chars in column"
			],
			[
				"sendt",
				"SendText+: Choose Program"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remp",
				"Package Control: Remove Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"rever",
				"File: Revert"
			],
			[
				"comme",
				"Toggle Comment"
			],
			[
				"wr",
				"Word Wrap: Toggle"
			],
			[
				":w",
				":w - Save"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"w",
				"Word Wrap: Toggle"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"so",
				"SolarizedToggle: Toggle"
			],
			[
				"soal",
				"SolarizedToggle: Toggle"
			],
			[
				"split",
				"Snippet: Cummulative"
			],
			[
				"war",
				"Word Wrap: Toggle"
			],
			[
				"tog",
				"Toggle Comment"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				":W",
				":w - Save"
			],
			[
				":saveas",
				"Project: Save As"
			],
			[
				":sav",
				"Project: Save As"
			],
			[
				"slig",
				"SolarizedToggle: Toggle"
			],
			[
				":",
				":w - Save"
			],
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				":sa",
				":w - Save"
			],
			[
				"WRAP",
				"Word Wrap: Toggle"
			]
		],
		"width": 510.0
	},
	"console":
	{
		"height": 430.0,
		"history":
		[
			"clear",
			"sen",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/avi/Dropbox (Partners HealthCare)/Dropbox/project/code/deeplearning/icb/deepImmune/data_generator.py",
		"/Users/avi/Dropbox (Partners HealthCare)/Dropbox/project/code/deeplearning/icb/deepImmune/task.py",
		"/Users/avi/Downloads/seq2seq-translation.py",
		"/Users/avi/Dropbox/project/code/srescues/liu/amy/create.ceres.dataset.R",
		"/Users/avi/Downloads/IMvigor210.clinical",
		"/Users/avi/Downloads/temp.tx",
		"/Users/avi/Dropbox/project/code/srescues/find.survival.gene.cox.R",
		"/Users/avi/Dropbox/project/code/srescues/source.goldenset.R",
		"/Users/avi/Dropbox/project/code/srescues/uri/cancer/uri.tcga.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/seq2seq/drug.senstiviity.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/temp.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/motif_enrichment/fast-ngrams.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/split9mer.R",
		"/Users/avi/Dropbox/project/code/srescues/liu/dejan/src/temp.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/CDR3_A_B_tcga.py",
		"/Users/avi/Dropbox/project/code/deeplearning/pytorch/text/seq2seq/antigen2cdr3b.py",
		"/Users/avi/Dropbox/project/code/srescues/liu/dejan/src/differential.expression.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/process.tcga.V3.R",
		"/Users/avi/softwares/tcR/R/kmers.R",
		"/Users/avi/Dropbox/project/code/deeplearning/pytorch/text/seq2seq/seq2seq.py",
		"/Users/avi/Dropbox/project/code/deeplearning/pytorch/text/seq2seq/antigen2cdr3b.ipynb",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/data/tcga/mc3_neoantigen/test.indel.pep17.fa",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/data/tcga/mc3_neoantigen/test.snp.pep17.fa",
		"/Users/avi/softwares/TCGAbiolinks/R/analyze.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/download_tcga_exp.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/motif_enrichment/motif_cdr3_4_epitope.R",
		"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/tcR/R/tcR",
		"/Users/avi/Dropbox/project/code/srescues/rapamycin/mtor.rsr.cox.dd.R",
		"/Users/avi/Dropbox/project/code/srescues/cell.revision/science.revision/GO.distance.du.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/motif_enrichment/motif_enrichment_6_4_2018.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/motif_enrichment/cdr3motif_mutation_co.occur_fisher_test.R",
		"/Library/Frameworks/R.framework/Versions/3.5/Resources/library/TCGAbiolinks/cd",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/mda_broad_comparison/test.indel.pep17.fa",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/mda_broad_comparison/test.snp.pep17.fa",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/text/ru.sh",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/word2vec_basic.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/models/tutorials/embedding/word2vec.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/embedding.todo",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/run.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/semisupervised_tcrnet.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/semisupervised_tcrnet.todo",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/iedb_processing.R",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/text/nmt/nmt/train.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/datasets/process_iedb.R",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/text/THUMT/thumt/bin/trainer.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/datasets/iedb.process.R.ipynb",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/text/nmt/nmt/model_helper.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/text/nmt/nmt/model.py",
		"/Users/avi/Dropbox/project/code/srescues/uri/run.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/kmer_result_plot.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/tempxxx.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/temp.R",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/word-rnn-tensorflow/train.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/data/nmt_inps/test_3000.epitope",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/mda_broad_comparison/comparison.v1.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/temp.txt",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/temp.xt",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/create_ntm_inputs.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/text/text-rnn-tensorflow/simple_model.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/self-attention-tf/self_attention.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/kmer_tcrnet.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/self-attention-tf/data_helpers.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/self-attention-tf/eval.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/self-attention-tf/data/train.csv",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/self-attention-tf/train.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/process.tcga.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/tcrnet_simulation.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/r2python.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/multilayer_perceptron_trial_mod.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/TensorFlow-Examples/examples/3_NeuralNetworks/convolutional_network.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/dna.motif.recognition.simulated.R",
		"/Users/avi/Downloads/PD_011%2Foutput.maf.annotated",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/cidc-pipelines/wdl/wes/oncotator.inputs.json",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/cidc-pipelines/wdl/wes/vcf2maf.inputs.json",
		"/Users/avi/Dropbox (Partners HealthCare)/todos/keith.todo",
		"/Users/avi/Downloads/logdir/metadata.tsv",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/CDR3_A_B_epitope_mod.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/multilayer_perceptron_gpus.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/TensorFlow-Examples/examples/3_NeuralNetworks/convolutional_network_raw.py",
		"/Users/avi/Dropbox/project/code/srescues/olga/norm.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/motif_enrichment/gibbs_sampling.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/get_mut_protein_gencode_v1.pl",
		"/Users/avi/Dropbox/project/code/srescues/genevieve/gao_immunotherapy/pt98/run.v2.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/motif_enrichment/motif_enrichment.sublime-workspace",
		"/Users/avi/Dropbox/project/code/srescues/genevieve/gao_immunotherapy/pt98/pt98.tpm.txt",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/antigens/maf2antigen.json",
		"/Users/avi/Dropbox/project/code/srescues/Yossi/genes_clinical_relevance_summary_BC_dn.txt",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/create.cache.sh",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/cidc-pipelines/wdl/wes/wes2.wdl",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/cidc-pipelines/wdl/wes/vcf2maf.wdl",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/antigens/myneoantigen.wdl",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/vep/install/readme",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/vep/cloud-vep/google_cloud.conf",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/vep/vep/wdl.run.sh",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/vep/vep-validation/validate_vep.sh",
		"/Users/avi/Downloads/tempsdfdsf",
		"/Users/avi/.zshrc",
		"/Users/avi/.zshrc.pre-oh-my-zsh",
		"/Users/avi/.bashrc",
		"/Users/avi/.profile",
		"/Users/avi/Downloads/log.txt",
		"/Users/avi/Dropbox (Partners HealthCare)/interview_pi/interview_questions.todo",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/models/tutorials/rnn/quickdraw/train_model.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/process.tcga.V2.R",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/get_mutation.R",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/TensorFlow-Examples/examples/6_MultiGPU/multigpu_cnn.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/models/tutorials/image/cifar10/cifar10_multi_gpu_train.py",
		"/Users/avi/Dropbox (Partners HealthCare)/idea_life/ideas.todo",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/models/official/mnist/mnist.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/gist.py",
		"/Users/avi/Downloads/temp1.py",
		"/Users/avi/Downloads/temp.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/semi_supervised_adversarial_autoencoder.py",
		"/Users/avi/Dropbox/project/code/deeplearning/tensorflow/models/tutorials/image/cifar10_estimator/cifar10_model.py",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/vep/vep-validation/variant_effect_output.txt",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/vep/vep-validation/homo_sapiens_GRCh38_vep_weboutput_standard_param.vep.txt",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/vep/vep-validation/homo_sapiens_GRCh38_vep_weboutput_standard_param.txt",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/vep/vep-validation/ homo_sapiens_GRCh38_vep_weboutput_standard_param.vcf",
		"/Users/avi/Dropbox/project/code/immunotherapy/cidc/vep/vep-validation/ homo_sapiens_GRCh38_vep_input.vcf",
		"/Users/avi/Dropbox/project/code/srescues/genevieve/dave/mghfilesInBroadServere.csv",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/create-package/funniest/funniest/__init__.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/multilayer_perceptron.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/tcga_dataset.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/multilayer_perceptron_multigpus.py",
		"/Users/avi/Dropbox/project/code/deeplearning/antigen_recognition/src/mnist_autoencoder.py",
		"/Users/avi/Downloads/temp.maf",
		"/Users/avi/Downloads/protein.fa",
		"/Users/avi/softwares/update_R/update.R"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 132.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "search_hyperparams.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2119,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "python"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": 105,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"markdonw_live_preview_last_run": 1543257299.81,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"vintage":
							{
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 0
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 54.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 34.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 136.0
	},
	"output.latextools":
	{
		"height": 31.0
	},
	"output.mdpopups":
	{
		"height": 38.0
	},
	"pinned_build_system": "",
	"project": "temp.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"trai",
				"~/Dropbox/project/code/deeplearning/tensorflow/self-attention-tf/train.py"
			],
			[
				"run",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/run.py"
			],
			[
				"",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/create.neoantigen.R"
			],
			[
				"wes",
				"~/Dropbox/project/code/immunotherapy/cidc/cidc-pipelines/wdl/wes/wes2.wdl"
			],
			[
				"todo",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/semisupervised_tcrnet.todo"
			],
			[
				"r2p",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/r2python.py"
			],
			[
				"cd",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/CDR3_A_B_tcga.py"
			],
			[
				"gpu",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/multilayer_perceptron_gpus.py"
			],
			[
				"mult",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/multilayer_perceptron_trial_mod.py"
			],
			[
				"r2",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/r2python.py"
			],
			[
				"cn",
				"~/Dropbox/project/code/deeplearning/tensorflow/TensorFlow-Examples/examples/6_MultiGPU/multigpu_cnn.py"
			],
			[
				"tcga",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/tcga_dataset.py"
			],
			[
				"run.",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/run.py"
			],
			[
				"mul",
				"~/Dropbox/project/code/deeplearning/antigen_recognition/src/multilayer_perceptron_trial.py"
			],
			[
				"new.model.r",
				"~/Dropbox/project/code/srescues/nsclc/nishanth/run.new.model.R"
			],
			[
				"~/project/gtps/gtps/src",
				"~/project/gtps/gtps/src/cardio.geneList.R"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "amy",
		"selected_items":
		[
			[
				"amy",
				"~/Dropbox/project/code/amy/pgRNA/src/pgrna.sublime-project"
			],
			[
				"deja",
				"~/Dropbox/project/code/srescues/liu/dejan/dejan.sublime-project"
			],
			[
				"",
				"~/Dropbox/project/code/srescues/nsclc/nishanth/synergy.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"vintage":
		{
		}
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
